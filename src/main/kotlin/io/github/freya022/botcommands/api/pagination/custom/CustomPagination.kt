package io.github.freya022.botcommands.api.pagination.custom

import io.github.freya022.botcommands.api.core.BContext
import io.github.freya022.botcommands.api.pagination.Paginators
import net.dv8tion.jda.api.utils.messages.MessageCreateBuilder

/**
 * Classic paginator, where each page is generated by a [CustomPageEditor].
 *
 * @see Paginators.customPagination
 * @see Paginators.singlePage
 */
class CustomPagination internal constructor(
    context: BContext,
    builder: CustomPaginationBuilder
) : AbstractCustomPagination<CustomPagination>(
    context,
    builder
) {
    private val editor: CustomPageEditor<CustomPagination> = builder.pageEditor

    override var maxPages: Int = builder.maxPages
        public set(value) {
            check(maxPages > 0) { "Max pages must be > 0" }
            field = value
        }

    override fun writeMessage(builder: MessageCreateBuilder) {
        editor.accept(this, builder, page)
    }
}
